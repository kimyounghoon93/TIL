# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

가상환경 설정
mkdir django

busanteam:~/workspace (master) $ cd django

busanteam:~/workspace/django (master) $ mkdir intro

busanteam:~/workspace/django (master) $ introcd intro/

pyenv virtualenv 3.6.7 intro-venv
pyenv local intro-venv

pip install django
django-admin startproject intro .

python manage.py runserver $IP:$PORT

28번째 줄

ALLOWED_HOSTS = ['주소창']
--------------------
intro - 프로젝트이름파일 - __pycache__

__init__.py 파일이 있어야 인트로랑 세트로 여겨서 intro. ~~ 를 사용 할 수 있다.

settings = 언어, 시간대, SQL 설치 및 os적용 등 많은 것이 세팅 되어있다

urls.py - 문지기(요청이 도착하고 여기서 분석 후 어떠한 요청이 왔는지 인식 후 필요한 구조로
전환해주는 파일-어떤 주소는 어디로 보내라 라는 걸 설정하는 곳 [교환원])

wsgi.py - 실제로 프로젝트 할 때 서버에 구축하기 위하여 세팅하는 곳
manage.py - 기본 설정들이 되었는지 알 수 있는 곳

새로운 프레임 워크를 배우려면
해당 사이트를 검색하면 나옴
------------------
python manage.py startapp pages   
-----
__init__.py
admin.py - 관리자
apps.py - 정보가 담긴 파일
models.py - 앱에서 사용된 데이터들이 정리된 파일
**test.py - 작성한 코드를 테스트하는 코드를 쓰는 파일
views.py - 명령이 들어왔을 때 어떤 명령이였는지 알려줌 실제 로직이 작성되는 곳
-----------

33번째 INSTALLED_APPS = [
'pages.apps.PagesConfig',
]
내가 만든 앱의 명단을 추가 등록해야함
107 번째 LANGUAGE_CODE = 'en-us' ==>'ko-kr'
TIME_ZONE = 'UTC' ==> 'Asia/Seoul'
tz=https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

pages 폴더 안에 templates폴더 생성

views.py에서
def index(request):
    return render(request,'index.html')

서버열기
python manage.py runserver $IP:$PORT


"{{ post.birthday|date:'Y-m-d'}}"
