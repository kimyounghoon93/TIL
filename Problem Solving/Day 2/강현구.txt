------1. View-------

def getmax(here):
    mymax = heights[here-2]
    if mymax < heights[here-1]:
        mymax = heights[here-1]
    if mymax < heights[here+1]:
        mymax = heights[here+1]
    if mymax < heights[here+2]:
        mymax = heights[here+2]

    return mymax

TC = 10
for tc in range(1, TC+1):
    N = int(input())
    heights = list(map(int, input().split()))

    ans = 0

    for here in range(2, N-2):
        side = getmax(here)
        if side < heights[here]:
            ans += heights[here] - side

    print('#%d %d' %(tc, ans))

-------2. Minmax-----------

T = int(input())

for tc in range(1, T+1):
    N = int(input())
    ai = list(map(int, input().split()))

    max = ai[0]
    min = ai[0]

    for i in ai:
        if i > max:
            max = i

    for i in ai:
        if i < min:
            min = i

    ans = max - min

    print('#%d %d' %(tc, ans))

----------3. 숫자카드-----------

T = int(input())

for tc in range(1, T+1):
    N = int(input())
    data = list(map(int, input()))

    count = [0] * 10

    for i in data:
        count[i] += 1

    ans = count[0]

    for i in range(len(count)):
        if count[i] >= ans:
            ans = count[i]
            ansindex = i

    print('#%d %d %d' %(tc, ansindex, ans))

----------4. 구간합-----------

T = int(input())

for tc in range(1, T+1):
    N, M = map(int, input().split())
    data = list(map(int, input().split()))

    partmax = 0
    partmin = 987654321

    for i in range(len(data)-(M-1)):
        count1 = 1
        temp1 = data[i]
        while count1 < M:
            temp1 += data[i+1]
            count1 += 1
            i += 1
            sum1 = temp1

        if sum1 > partmax:
            partmax = sum1


    for i in range(len(data)-(M-1)):
        count2 = 1
        temp2 = data[i]
        while count2 < M:
            temp2 += data[i + 1]
            count2 += 1
            i += 1
            sum2 = temp2

        if sum2 < partmin:
            partmin = sum2

    ans = partmax - partmin

    print('#%d %d' %(tc, ans))


구간합 푼다고 시간 다 써서 flatten, 전기버스 못 풀었습니다

