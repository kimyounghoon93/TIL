1. veiw 
T = 10
for t in range(1,T+1):
    N = int(input())
    heights = list(map(int, input().split()))
    result = 0

    for i in range(2, len(Data) - 2):
        if Data[i] > Data[i + 2] and Data[i] > Data[i - 2]:
            if Data[i] > Data[i + 1] and Data[i] > Data[i - 1]:
                result = Data[i] - max(Data[i - 2], Data[i - 1], Data[i + 1], Data[i + 2])
                count += result

    print(f'#{t} {result}')

2. minmax
T = int(input())
for t in range(1, T+1):
    N = int(input())
    Data = list(map(int, input().split()))

    my_max = Data[0]
    my_min = Data[-1]
    result = 0
    for v in Data:
        if my_max < v:
            my_max = v
        if my_min > v:
            my_min = v
        result = my_max - my_min
    print(f'#{t} {result}')

3. 전기버스
T = int(input())
for t in range(1, T+1):
    K, N, M = map(int, input().split())
    s = list(map(int, input().split()))
    count = 0
    m = K
    for i in range(N):
        if m in s:
            count += 1
            m += K
        else:
            m -= 1
        if m == N:
            break
    if m < N:
        count = 0

    print(f'#{t} {count}')

4. 카드넘버
T = int(input())
for t in range(1, T+1):
    N = int(input())
    ai=list(map(int, input()))

    counting=[0]*10
    max_c = 0
    card = 0
    for i in ai:
        counting[i] += 1
        max_c = max(counting)
    for j in range(len(counting)):
        if max_c == counting[j]:
            card = j

    print(f'#{t} {card} {max_c}')

5. 구간 합
T = int(input())
for t in range(1, T+1):
    N, M = map(int, input().split())
    aj = list(map(int, input().split()))
    max_sum = 0
    min_sum = 0x7FFFFFFF
    sum_number = 0
    for i in range(N-M+1):
        sum_number = sum(aj[i:i+M])
        if max_sum < sum_number:
            max_sum = sum_number
        if min_sum > sum_number:
            min_sum = sum_number
        result= max_sum - min_sum

    print(f'#{t} {result}')

6. flatten
T = 10
for t in range(1, T+1):
    dump = int(input())
    heights = list(map(int, input().split()))


    result = 0x7FFFFFFF
    max_i = 0
    min_i = 0
    while dump > -1:
        max_h = 0
        min_h = 0x7FFFFFFF
        for i, h in enumerate (heights):
            if max_h < h:
                max_h = h
                max_i = i

            if min_h > h:
                min_h = h
                min_i = i
        result = max_h - min_h
        heights[max_i] -=1
        heights[min_i] += 1
        dump -= 1


    print(f'#{t} {result}')